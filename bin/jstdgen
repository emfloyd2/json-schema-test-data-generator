#!/usr/bin/env node
'use strict';

var path = require('path');
var jst = require('../dist');
var param = process.argv[2];
var fs = require('fs');
var version = require('../package.json').version;
var ArgumentParser = require('argparse').ArgumentParser;

var parser = new ArgumentParser({
  addHelp:true,
  description: 'Tool that generates test data from provided Schema'
});

parser.addArgument(
  ['--simple', '-s'],
  {
    help: 'Generate single, valid JSON payload',
    action: 'storeTrue'
  }
);

parser.addArgument(
  ['-v', '--version'],
  {
    help: 'Print version',
    action: 'storeTrue'
  }
);

parser.addArgument(
  ['schema_file'],
  {
    help: 'Path to JSON Schema'
  }
);

var args = parser.parseArgs()

if (args.version) {
  console.log(version);
  process.exit(0);
}

if (!args.schema_file) {
  console.log('must specify a schema file');
  process.exit(234);
}

var ext = path.extname(args.schema_file);
if (!ext || ext !== '.json') {
  console.log('must specify a schema file');
  process.exit(234);
}

var schemaStr = fs.readFileSync(args.schema_file, 'utf8');
var schema;
try {
  schema = JSON.parse(schemaStr);
} catch (e) {
  console.error(e);
  process.exit(234);
}

if (!args.simple) {
  var payload = jst.generate(schema);
} else {
  var payload = jst.generate_simple(schema);
}
console.log(JSON.stringify(payload));
